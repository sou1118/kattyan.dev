---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";

type Props = CollectionEntry<"blog">;

const { data, slug } = Astro.props;
const { title, description, pubDate, updatedDate, heroImage, emoji } = data;

// OGP画像のURLを構築
const ogImage = `/og/${slug.replace("posts/", "")}.png`;
---

<BaseLayout 
  title={title} 
  description={description}
  image={ogImage}
  ogType="article"
>
  <article
    class="prose prose-zinc dark:prose-invert max-w-none"
    itemscope
    itemtype="http://schema.org/BlogPosting"
  >
    <div class="mb-8">
      {heroImage && (
        <img 
          src={heroImage} 
          alt="" 
          class="rounded-lg border bg-muted"
          transition:name={`hero-${slug}`}
          itemprop="image"
        />
      )}
      <div class="space-y-4">
        <div class="flex items-center gap-2">
          {emoji && <span class="text-4xl" transition:name={`emoji-${slug}`}>{emoji}</span>}
          <h1 class="text-4xl font-bold leading-tight lg:text-5xl my-0" itemprop="headline">{title}</h1>
        </div>
        <div class="flex gap-2 text-sm text-muted-foreground">
          <time itemprop="datePublished" datetime={pubDate.toISOString()}>
            <FormattedDate date={pubDate} />
          </time>
          {
            updatedDate && (
              <>
                <span>•</span>
                <span>更新: <time itemprop="dateModified" datetime={updatedDate.toISOString()}><FormattedDate date={updatedDate} showTime={true} /></time></span>
              </>
            )
          }
        </div>
        <meta itemprop="description" content={description} />
      </div>
    </div>
    <div itemprop="articleBody">
      <slot />
    </div>
  </article>
</BaseLayout>
